{"version":3,"sources":["logic/Block.js","logic/Chain.js","logic/Bus.js","App.js","index.js"],"names":["Block","index","arguments","length","undefined","action","gameId","tileIndex","type","previousHash","timestamp","Date","now","Object","classCallCheck","this","hash","getHash","md5","concat","JSON","stringify","DEFAULT_TILES","Chain","_this","blockchain","callback","bus","state","push","createGenesisBlock","setTimeout","restoreChain","lastBlock","data","block","calculateState","saveChain","onAddBlock","e","console","warn","message","nextBlock","getLastBlock","isValidNewBlock","pushBlock","log","newBlock","prevBlock","blockchainToValidate","tempBlocks","i","newBlocks","isValidChain","window","localStorage","setItem","fromStore","getItem","parse","map","_ref","blocks","oldState","reduce","_ref2","tiles","slice","Error","objectSpread","defineProperty","Bus","logging","id","peer","peerOptions","host","location","hostname","port","path","connections","Math","random","setBus","Peer","on","conn","handleMessage","filter","connection","axios","post","then","response","peerIds","forEach","connect","send","queryChainLengthMsg","broadcast","responseLatestMsg","responseChainMsg","handleBlockchainResponse","receivedBlocks","sort","b1","b2","latestBlockReceived","latestBlockHeld","applyBlock","queryAllMsg","replaceChain","getChain","_console","apply","TYPES","cross","circle","styles","largeIcon","width","height","large","padding","app","display","field","margin","border","clearTiles","App","props","possibleConstructorReturn","getPrototypeOf","call","handleTileClick","chain","addBlock","_this2","getBlockchain","update","setState","lol","_this3","react_default","a","createElement","style","value","onChange","target","IconButton_default","key","iconStyle","onClick","clear_default","radio_button_unchecked_default","Component","ReactDOM","render","MuiThemeProvider_default","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a637b09e.chunk.js","sourcesContent":["import md5 from 'md5';\n\nexport default class Block {\n    /**\n     * @type {number}\n     */\n    index = 0;\n\n    /**\n     * @type {{gameId: string, tileIndex: number, type: boolean}}\n     */\n    action = {};\n\n    /**\n     * @type {string}\n     */\n    hash = '';\n\n    /**\n     * @type {string}\n     */\n    previousHash = '';\n\n    /**\n     * @type {number}\n     */\n    timestamp = 0;\n\n    /**\n     * @param {number} index\n     * @param {{gameId: string, tileIndex: number, type: boolean}} action\n     * @param {string} previousHash\n     * @param {string} chainId\n     * @param {number} timestamp\n     */\n    constructor(index = 0, action = {gameId: '', tileIndex: -1, type: false}, previousHash = '', timestamp = Date.now() / 1000) {\n        this.index = index;\n        this.previousHash = previousHash;\n        this.action = action;\n        this.timestamp = timestamp;\n        this.hash = this.getHash();\n    }\n\n    /**\n     * @returns {string}\n     */\n    getHash() {\n        return md5(`${this.index}${this.previousHash}${JSON.stringify(this.action)}${this.timestamp}`);\n    }\n\n    clone() {\n        return new Block(this.index, this.action, this.previousHash, this.timestamp);\n    }\n}\n","/* eslint-disable */\nimport Block from './Block';\n\nconst DEFAULT_TILES = ['','','','','','','','','',];\n\nexport default class Chain {\n    /**\n     * @type {Array.<Block>}\n     */\n    blockchain = [];\n    callback = () => {};\n    bus = null;\n    state = {};\n\n    constructor() {\n        this.blockchain.push(this.createGenesisBlock());\n\n        setTimeout(() => this.restoreChain(), 0);\n    }\n\n    setBus(bus) {\n        this.bus = bus;\n    }\n\n    update(callback) {\n        this.callback = callback;\n    }\n\n    /**\n     * @returns {Array.<Block>}\n     */\n    getChain() {\n        return this.blockchain;\n    }\n\n    /**\n     * @returns {Block}\n     */\n    getLastBlock() {\n        return this.blockchain[this.blockchain.length - 1];\n    }\n\n    createGenesisBlock() {\n        return new Block(0, {}, '0', 0);\n    }\n\n    nextBlock(lastBlock, data) {\n        const index = lastBlock.index + 1;\n        const hash = lastBlock.hash;\n\n        return new Block(index, data, hash);\n    }\n\n    /**\n     * @param {Block} block\n     */\n    pushBlock(block) {\n        try {\n            this.state = this.calculateState([block], this.state);\n            this.blockchain.push(block);\n            this.saveChain();\n            this.bus.onAddBlock();\n            this.callback(this.state);\n        } catch (e) {\n            console.warn(e.message);\n        }\n    }\n\n    addBlock(data) {\n        const nextBlock = this.nextBlock(this.getLastBlock(), data);\n\n        if (!this.isValidNewBlock(nextBlock, this.getLastBlock())) return false;\n\n        this.pushBlock(nextBlock);\n    }\n\n    /**\n     * @param {Block} block\n     */\n    applyBlock(block) {\n        if (!this.isValidNewBlock(block, this.getLastBlock())) return;\n\n        this.pushBlock(block);\n\n        console.log('Receive block:', block.index, block.hash);\n    }\n\n    /**\n     * @param {Block} newBlock\n     * @param {Block} prevBlock\n     * @returns {boolean}\n     */\n    isValidNewBlock(newBlock, prevBlock) {\n        if (prevBlock.index + 1 !== newBlock.index) {\n            console.log('Invalid index');\n            return false;\n        } else if (prevBlock.hash !== newBlock.previousHash) {\n            console.log('Invalid previoushash');\n            return false;\n        } else if (newBlock.getHash() !== newBlock.hash) {\n            console.log('Invalid hash: ' + newBlock.getHash() + ' ' + newBlock.hash);\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * @param {Array.<Block>} blockchainToValidate\n     */\n    isValidChain(blockchainToValidate) {\n        if (JSON.stringify(blockchainToValidate[0]) !== JSON.stringify(this.createGenesisBlock())) {\n            return false;\n        }\n        const tempBlocks = [blockchainToValidate[0]];\n        for (let i = 1; i < blockchainToValidate.length; i++) {\n            if (this.isValidNewBlock(blockchainToValidate[i], tempBlocks[i - 1])) {\n                tempBlocks.push(blockchainToValidate[i]);\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @param {Array.<Block>} newBlocks\n     */\n    replaceChain(newBlocks) {\n        if (this.isValidChain(newBlocks) && newBlocks.length > this.blockchain.length) {\n            console.log('Received blockchain is valid. Replacing current blockchain with received blockchain');\n\n            try {\n                this.state = this.calculateState(newBlocks);\n                this.blockchain = newBlocks;\n                this.callback(this.state);\n                this.saveChain();\n            } catch (e) {\n                console.warn(e.message);\n            }\n        } else {\n            console.log('Received blockchain invalid');\n        }\n    }\n\n    saveChain() {\n        window.localStorage.setItem('chain', JSON.stringify(this.blockchain));\n    }\n\n    restoreChain() {\n        const fromStore = window.localStorage.getItem('chain') || '[]';\n        const blockchain = JSON.parse(fromStore)\n            .map(({index, action, previousHash, timestamp}) => new Block(index, action, previousHash, timestamp));\n\n        if (blockchain.length) {\n            try {\n                this.state = this.calculateState(blockchain);\n                this.blockchain = blockchain;\n                this.callback(this.state);\n            } catch (e) {\n                console.warn(e.message);\n            }\n        }\n    }\n\n    /**\n     * @param {Array.<Block>} blocks\n     * @param {{}} oldState\n     * @returns {{}}\n     */\n    calculateState(blocks, oldState = {}) {\n        return blocks.reduce((state, {action}) => {\n            const tiles = state[action.gameId] && state[action.gameId].tiles || DEFAULT_TILES.slice();\n\n            if (action.tileIndex === undefined) return state;\n\n            if (tiles[action.tileIndex] !== '') throw new Error('Invalid action');\n\n            tiles[action.tileIndex] = action.type;\n\n            return {\n                ...state,\n                [action.gameId]: {\n                    tiles,\n                    type: action.type\n                },\n            };\n        }, oldState);\n    }\n}\n","/* eslint-disable */\nimport md5 from 'md5';\n\nimport axios from 'axios';\nimport Chain from './Chain';\nimport Block from './Block';\nimport 'peerjs';\n\nconst QUERY_LATEST = 'QUERY_LATEST';\nconst QUERY_ALL = 'QUERY_ALL';\nconst RESPONSE_BLOCKCHAIN = 'RESPONSE_BLOCKCHAIN';\n\nexport default class Bus {\n    constructor() {\n        this.logging = true;\n        this.id = '';\n        this.peer = null;\n        /**\n         * @type {{host: string, port: (*), path: string}}\n         */\n        this.peerOptions = {\n            host: window.location.hostname,\n            port: 80, // rebuid prease\n            path: '/peerjs'\n        };\n\n        this.connections = [];\n\n        this.id = md5(`${Date.now()}${Math.random()}`);\n\n        this.blockchain = new Chain();\n        this.blockchain.setBus(this);\n\n        this.peer = new Peer(this.id, this.peerOptions);\n\n        this.peer.on('connection', (conn) => {\n            conn.on('data', (message) => {\n                this.connections = this.connections.concat([conn]);\n                this.handleMessage(conn, message);\n            });\n\n            conn.on('close', () => {\n                this.connections = this.connections.filter(connection => connection !== conn);\n            });\n        });\n\n        axios.post(`//${this.peerOptions.host}:${this.peerOptions.port}/connect`, {id: this.id})\n            .then((response) => {\n                return response.data;\n            })\n            .then(peerIds => {\n                peerIds.forEach(id => {\n                    const conn = this.peer.connect(id);\n\n                    conn.on('open', () => {\n                        conn.on('data', (message) => {\n                            this.handleMessage(conn, message);\n                        });\n\n                        this.connections = this.connections.concat([conn]);\n                        conn.send(this.queryChainLengthMsg());\n                    });\n\n                    conn.on('close', () => {\n                        this.connections = this.connections.filter(connection => connection !== conn);\n                    });\n                });\n            });\n    }\n\n    /**\n     * @returns {Chain}\n     */\n    getBlockchain() {\n        return this.blockchain;\n    }\n\n    onAddBlock() {\n        this.broadcast(this.responseLatestMsg());\n    }\n\n    /**\n     * @param connection\n     * @param data\n     */\n    handleMessage(connection, data) {\n        const message = JSON.parse(data);\n        this.log('Received message ' + JSON.stringify(message));\n        switch (message.type) {\n        case QUERY_LATEST:\n            connection.send(this.responseLatestMsg());\n            break;\n        case QUERY_ALL:\n            connection.send(this.responseChainMsg());\n            break;\n        case RESPONSE_BLOCKCHAIN:\n            this.handleBlockchainResponse(message);\n            break;\n        default: return;\n        }\n    }\n\n    handleBlockchainResponse(message) {\n        const receivedBlocks = message.data\n            .map(({index, action, previousHash, timestamp}) => new Block(index, action, previousHash, timestamp))\n            .sort((b1, b2) => (b1.index - b2.index));\n\n        const latestBlockReceived = receivedBlocks[receivedBlocks.length - 1];\n        const latestBlockHeld = this.blockchain.getLastBlock();\n\n        if (latestBlockReceived.index > latestBlockHeld.index) {\n            this.log('blockchain possibly behind. We got: ' + latestBlockHeld.index + ' Peer got: ' + latestBlockReceived.index);\n            if (latestBlockHeld.hash === latestBlockReceived.previousHash) {\n                this.log('We can append the received block to our chain');\n                this.blockchain.applyBlock(latestBlockReceived);\n                this.broadcast(this.responseLatestMsg());\n            } else if (receivedBlocks.length === 1) {\n                this.log('We have to query the chain from our peer');\n                this.broadcast(this.queryAllMsg());\n            } else {\n                this.log('Received blockchain is longer than current blockchain');\n                this.blockchain.replaceChain(receivedBlocks);\n                this.broadcast(this.responseLatestMsg());\n            }\n        } else {\n            this.log('received blockchain is not longer than current blockchain. Do nothing');\n        }\n    }\n\n    queryChainLengthMsg() {\n        this.log(QUERY_LATEST);\n        return JSON.stringify({\n            'type': QUERY_LATEST\n        });\n    }\n\n    queryAllMsg() {\n        this.log(QUERY_ALL);\n        return JSON.stringify({\n            'type': QUERY_ALL\n        });\n    }\n\n    responseChainMsg() {\n        this.log('responseChainMsg', RESPONSE_BLOCKCHAIN);\n        return JSON.stringify({\n            'type': RESPONSE_BLOCKCHAIN,\n            'data': this.blockchain.getChain(),\n        });\n    }\n\n    responseLatestMsg() {\n        this.log('responseLatestMsg', RESPONSE_BLOCKCHAIN);\n        return JSON.stringify({\n            'type': RESPONSE_BLOCKCHAIN,\n            'data': [this.blockchain.getLastBlock()],\n        });\n    }\n\n    /**\n     * @param message\n     */\n    broadcast(message) {\n        this.connections\n            .forEach(conn => {\n                conn.send(message);\n            });\n    }\n\n    log(...params) {\n        if (this.logging) {\n            console.log(...params);\n        }\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport IconButton from 'material-ui/IconButton';\nimport Cross from 'material-ui/svg-icons/content/clear';\nimport Circle from 'material-ui/svg-icons/toggle/radio-button-unchecked';\nimport Bus from './logic/Bus';\n\nconst TYPES = {\n  cross: true,\n  circle: false,\n};\n\nconst styles = {\n  largeIcon: {\n    width: 60,\n    height: 60,\n  },\n  large: {\n    width: 120,\n    height: 120,\n    padding: 30,\n  },\n  app: {\n    display: 'inline-block',\n  },\n  field: {\n    margin: 'auto',\n    width: 360,\n    height: 360,\n    border: '1px solid',\n  },\n};\n\nconst clearTiles = ['', '', '', '', '', '', '', '', ''];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      state: {},\n    };\n\n    this.state.gameId = props.gameId;\n\n    this.state.state[this.state.gameId] = {\n      tiles: clearTiles.slice(),\n      type: TYPES.cross,\n    };\n  }\n\n  componentDidMount() {\n    const bus = new Bus();\n    this.chain = bus.getBlockchain();\n\n    this.chain.update((state) => {\n      this.setState({\n        state,\n      });\n    });\n\n    window.lol = this.chain;\n  }\n\n  render() {\n    return (\n      <div style={styles.app}>\n        <label>Game id: <input\n          type=\"number\"\n          value={this.state.gameId}\n          onChange={(e) => { this.setState({ gameId: e.target.value }); }}\n        /></label>\n        <h5>{(this.state.state[this.state.gameId] && (this.state.state[this.state.gameId].type === TYPES.cross)) ? 'circle' : 'cross'}</h5>\n        <div style={styles.field}>\n          {(this.state.state[this.state.gameId] && this.state.state[this.state.gameId].tiles || clearTiles).map((type, i) => (\n            <IconButton\n              key={i}\n              iconStyle={styles.largeIcon}\n              style={styles.large}\n              onClick={() => this.handleTileClick(i)}\n            >\n              {type === TYPES.cross && <Cross />}\n              {type === TYPES.circle && <Circle />}\n            </IconButton>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  handleTileClick = (i) => {\n    this.chain.addBlock({\n      gameId: this.state.gameId,\n      tileIndex: i,\n      type: !(this.state.state[this.state.gameId] && this.state.state[this.state.gameId].type),\n    });\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n\nReactDOM.render(<MuiThemeProvider><App gameId=\"1\" /></MuiThemeProvider>, document.getElementById('root'));\n// ReactDOM.render(<MuiThemeProvider><App gameId=\"1\" /></MuiThemeProvider>, document.getElementById('root1'));\n// ReactDOM.render(<MuiThemeProvider><App gameId=\"2\" /></MuiThemeProvider>, document.getElementById('root2'));\n// ReactDOM.render(<MuiThemeProvider><App gameId=\"2\" /></MuiThemeProvider>, document.getElementById('root3'));\n\n"],"sourceRoot":""}